{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-real-world-project\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_URL = \"https://image.tmdb.org/t/p/w500\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  useEffect(() => {\n    // run once o\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && 'row__poster_large'}`,\n        onClick: () => handleClick(movie),\n        src: `${base_URL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"ksm51Vk9In4Mp/Rr0RWCxQaCbyQ=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","Youtube","movieTrailer","base_URL","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","console","log","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","id"],"sources":["E:/react-real-world-project/netflix-clone/src/Row.js"],"sourcesContent":["import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport axios from './axios'\r\nimport \"./Row.css\"\r\nimport Youtube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_URL= \"https://image.tmdb.org/t/p/w500\";\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n\r\nconst [movies,setMovies]=useState([])\r\nconst[trailerUrl,setTrailerUrl]=useState('')\r\nuseEffect(()=>{\r\n// run once o\r\nasync function fetchData(){\r\n  const request= await axios.get(fetchUrl);\r\n  setMovies(request.data.results);\r\n  return request;\r\n}\r\nfetchData();\r\n},[fetchUrl]);\r\n\r\nconsole.log(movies)\r\n\r\nconst opts = {\r\n  height: '390',\r\n  width: '100%',\r\n  playerVars: {\r\n    // https://developers.google.com/youtube/player_parameters\r\n    autoplay: 1,\r\n  }\r\n}\r\nconst handleClick=(movie)=>{\r\n  if (trailerUrl){\r\n    setTrailerUrl('');\r\n  }\r\n  else{\r\n    movieTrailer(movie?.name || \"\")\r\n    .then((url)=>{\r\n      const urlParams= new URLSearchParams(new URL(url).search);\r\n      setTrailerUrl(urlParams.get('v'))\r\n    })\r\n    .catch((error)=>console.log(error));\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className='row'>\r\n       <h2>{title}</h2>\r\n\r\n\r\n       <div className='row__posters'>\r\n        {movies.map(movie => (\r\n          \r\n          <img className={`row__poster ${isLargeRow && 'row__poster_large'}`}\r\n          key={movie.id}\r\n          onClick={()=> handleClick(movie)}\r\n          src={`${base_URL}${isLargeRow? movie.poster_path : movie.backdrop_path}`} \r\n          alt={movie.name} \r\n          />\r\n        ))}\r\n        \r\n       </div>\r\n          {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,QAAQ,GAAE,iCAAhB;;AAEA,SAASC,GAAT,OAA0C;EAAA;;EAAA,IAA7B;IAACC,KAAD;IAAOC,QAAP;IAAgBC;EAAhB,CAA6B;EAE1C,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBX,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAK,CAACY,UAAD,EAAYC,aAAZ,IAA2Bb,QAAQ,CAAC,EAAD,CAAxC;EACAC,SAAS,CAAC,MAAI;IACd;IACA,eAAea,SAAf,GAA0B;MACxB,MAAMC,OAAO,GAAE,MAAMb,KAAK,CAACc,GAAN,CAAUR,QAAV,CAArB;MACAG,SAAS,CAACI,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;MACA,OAAOH,OAAP;IACD;;IACDD,SAAS;EACR,CARQ,EAQP,CAACN,QAAD,CARO,CAAT;EAUAW,OAAO,CAACC,GAAR,CAAYV,MAAZ;EAEA,MAAMW,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IAFA;EAHD,CAAb;;EAQA,MAAMC,WAAW,GAAEC,KAAD,IAAS;IACzB,IAAIf,UAAJ,EAAe;MACbC,aAAa,CAAC,EAAD,CAAb;IACD,CAFD,MAGI;MACFT,YAAY,CAAC,CAAAuB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,KAAe,EAAhB,CAAZ,CACCC,IADD,CACOC,GAAD,IAAO;QACX,MAAMC,SAAS,GAAE,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAjB;QACArB,aAAa,CAACkB,SAAS,CAACf,GAAV,CAAc,GAAd,CAAD,CAAb;MACD,CAJD,EAKCmB,KALD,CAKQC,KAAD,IAASjB,OAAO,CAACC,GAAR,CAAYgB,KAAZ,CALhB;IAMD;EACF,CAZD;;EAcE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACG;MAAA,UAAK7B;IAAL;MAAA;MAAA;MAAA;IAAA,QADH,eAIG;MAAK,SAAS,EAAC,cAAf;MAAA,UACEG,MAAM,CAAC2B,GAAP,CAAWV,KAAK,iBAEf;QAAK,SAAS,EAAG,eAAclB,UAAU,IAAI,mBAAoB,EAAjE;QAEA,OAAO,EAAE,MAAKiB,WAAW,CAACC,KAAD,CAFzB;QAGA,GAAG,EAAG,GAAEtB,QAAS,GAAEI,UAAU,GAAEkB,KAAK,CAACW,WAAR,GAAsBX,KAAK,CAACY,aAAc,EAHvE;QAIA,GAAG,EAAEZ,KAAK,CAACC;MAJX,GACKD,KAAK,CAACa,EADX;QAAA;QAAA;QAAA;MAAA,QAFD;IADF;MAAA;MAAA;MAAA;IAAA,QAJH,EAgBO5B,UAAU,iBAAI,QAAC,OAAD;MAAS,OAAO,EAAEA,UAAlB;MAA8B,IAAI,EAAES;IAApC;MAAA;MAAA;MAAA;IAAA,QAhBrB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA1DQf,G;;KAAAA,G;AA4DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}